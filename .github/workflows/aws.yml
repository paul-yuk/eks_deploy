on:
  push:
    branches:
      - 'develop'
      - 'release'

name: Deploy to Amazon ECS

env:
  SERVICE_NAME: throttling
  DEPLOYMENT_NAME: prism-throttling
  NAMESPACE: throttling
  AWS_REGION: ap-northeast-2
  CLUSTER_NAME: madflow-develop

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Set variables
      id: setvars
      run: |
        if [[ "${{github.base_ref}}" == "release" || "${{github.ref}}" == "refs/heads/release" ]]; then
          echo "::set-output name=cluster::dmp_prd"
          echo "::set-output name=slack_channel::argo_deploy_prd"
        else
          echo "::set-output name=cluster::dmp_dev"
          echo "::set-output name=slack_channel::argo_deploy_dev"
        fi
        echo "::set-output name=date::$(date '+%Y%m%d%H%M%S')"

    - name: Checkout
      uses: actions/checkout@v2

    - name: Install kubectl
      uses: azure/setup-kubectl@v2.0
      with:
        version: 'v1.22.0'
      id: install

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Inject slug/short variables
      uses: rlespinasse/github-slug-action@v3.x

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      uses: docker/build-push-action@v3
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: 'paul-test'
        IMAGE_TAG: ${{ github.sha }}
      with:
        push: true
        tags: |
          ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest
          ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}-${{steps.setvars.outputs.date}}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Update kube config
      run: aws eks update-kubeconfig --name ${{ env.CLUSTER_NAME }} --region ${{ env.AWS_REGION }}

    - name: Deploy to EKS
      run: |
        kubectl rollout restart deployment ${{ env.DEPLOYMENT_NAME }} -n ${{ env.NAMESPACE }}